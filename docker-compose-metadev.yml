version: '3'
services: 
  #######################
  docker-proxy: 
    image: shipyard/docker-proxy:latest
    networks:
    - gestalt
    restart: always
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:rw
    environment: 
    - PORT=2375
    ports: 
    - "2375:2375"
  #######################
  data:
    build: data
    networks:
    - gestalt
    environment:
    - POSTGRES_USER=gestaltdev
    - POSTGRES_PASSWORD=letmein
    ports: 
    - "5432:5432"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  #######################
  rabbit:
    image: galacticfog/rabbit:latest
    networks:
    - gestalt
    ports: 
    - "5672:5672"
    - "15672:15672"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  #######################
  security:
    image: galacticfog/gestalt-security:latest
    networks:
    - gestalt
    depends_on:
    - data
    ports:
    - "9455:9000"
    env_file:
    - db.env
    environment:
    - OAUTH_RATE_LIMITING_AMOUNT=100
    - OAUTH_RATE_LIMITING_PERIOD=1
    - DATABASE_NAME=gestalt-security
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
#  #######################
#  run your own meta... this is some clues for doing that
#  meta: 
#    #image: gestalt-meta:0.6.26 # local version here
#    command: ["-Dlogger.resource=logger-debug.xml", "-jvm-debug", "10000"]
#    networks:
#    - gestalt
#    depends_on:
#    - data
#    - security
#    ports:
#    - "14374:9000"
#    - "10000:10000"
#    env_file:
#    - security.env
#    - db.env
#    - rabbit.env
#    environment:
#    - DATABASE_NAME=gestalt-meta
#    - META_POLICY_CALLBACK_URL=http://meta:9000
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
  #######################
  ui:
    image: galacticfog/gestalt-ui-react:latest
    networks:
    - gestalt
    depends_on:
    - security
    #- meta
    ports:
    - "80:80"
    environment:
    - META_API_URL=http://192.168.1.62:9000
    - SEC_API_URL=http://security:9000
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  #######################
  bootstrap:
    build: bootstrap
    networks:
    - gestalt
    command: "deploy"
    depends_on:
    - security
    #- meta
    env_file:
    - security.env
    - db.env
    - rabbit.env
    deploy:
      restart_policy:
        condition: none
    environment:
    - ADMIN_USERNAME=root
    - ADMIN_PASSWORD=root
    - CONTAINER_IMAGE_RELEASE_TAG=latest
    - NETWORK=gestaltdocker_gestalt
    - DOCKER_PROVIDER_HOSTNAME=192.168.1.62
    - DOCKER_PROVIDER_PORT=2375
    - DOCKER_PROVIDER_NETWORKS=gestaltdocker_gestalt
    - META_HOSTNAME=192.168.1.62
    - META_PORT=9000
    - META_PROTOCOL=http
    #- LASER_IMG=galacticfog/gestalt-laser:override
    #- KONG_IMG=galacticfog/kong:override
    #- API_GATEWAY_IMG=galacticfog/gestalt-api-gateway:override
    #- POLICY_IMG=galacticfog/gestalt-policy:override
    #- LASER_JS_IMG=galacticfog/gestalt-laser-executor-js:override
    #- LASER_JVM_IMG=galacticfog/gestalt-laser-executor-jvm:override
    #- LASER_DOTNET_IMG=galacticfog/gestalt-laser-executor-dotnet:override
    #- LASER_PYTHON_IMG=galacticfog/gestalt-laser-executor-python:override
    #- LASER_RUBY_IMG=galacticfog/gestalt-laser-executor-ruby:override
    #- LASER_GOLANG_IMG=galacticfog/gestalt-laser-executor-golang:override
networks: 
  gestalt: 
    driver: overlay
